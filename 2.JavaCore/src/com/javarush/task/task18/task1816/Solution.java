package com.javarush.task.task18.task1816;

/* 
Английские буквы
В метод main первым параметром приходит имя файла.
Посчитать количество букв английского алфавита, которое есть в этом файле.
Вывести на экран число (количество букв).
Закрыть потоки.


Требования:
1. Считывать с консоли ничего не нужно.
2. Создай поток чтения из файла, который приходит первым параметром в main.
3. В файле необходимо посчитать буквы английского алфавита и вывести это число в консоль.
4. Нужно учитывать заглавные и строчные буквы.
5. Поток чтения из файла должен быть закрыт.
*/

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.regex.*;

public class Solution {
    public static void main(String[] args) throws IOException {
        FileInputStream fis = new FileInputStream(args[0]);
        int count = 0;
        String result = "";

        while (fis.available() > 0) {
            result += (char) fis.read(); // считываем файл до конца в одну строку, переводя байты в char
        }
        fis.close(); // закрываем поток

        Pattern pat = Pattern.compile("[a-zA-z]"); // регулярка (РВ). Класс не имеет публичных конструкторов, поэтому для создания
        // объекта данного класса необходимо вызвать статический метод compile и передать в качестве первого аргумента строку с РВ
        Matcher mat = pat.matcher(result); //Matcher — класс, который представляет строку, реализует механизм согласования (matching)
        // с РВ и хранит результаты этого согласования (используя реализацию методов интерфейса MatchResult).
        // Не имеет публичных конструкторов, поэтому для создания объекта этого класса нужно использовать метод matcher класса Pattern
        while (mat.find()) { //Но результатов у нас еще нет. Чтобы их получить нужно воспользоваться методом find,
            //который пытается найти подстроку, которая удовлетворяет РВ.
            count++;
        }
        System.out.println(count);
    }
}
